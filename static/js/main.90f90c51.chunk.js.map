{"version":3,"sources":["theme/style.js","redux/PokeList/selectors.js","redux/PokeDetail/selectors.js","components/Header/Header.js","utils/utils.js","components/Pokedex/PokeCard/PokeCard.js","components/Pokedex/PokeList/PokeList.js","components/TableData/TableData.js","components/Pokedex/PokeDetail/PokeDetail.js","api/PokeAPI.js","redux/PokeList/actionTypes.js","redux/PokeList/actions.js","redux/PokeList/operations.js","redux/PokeDetail/actions.js","redux/PokeDetail/actionTypes.js","redux/PokeDetail/operations.js","components/Pokedex/Pokedex.js","App.js","serviceWorker.js","redux/PokeList/reducer.js","redux/PokeDetail/reducer.js","store/store.js","theme/theme.js","index.js","assets/logo/logo.svg"],"names":["style","makeStyles","loader","width","position","top","left","poison","backgroundColor","color","grass","fire","flying","water","bug","normal","electric","ground","fairy","fighting","psychic","rock","steel","ice","dragon","dark","ghost","state","pokeList","pokemons","loading","error","nextUrl","pokeDetail","pokemon","Header","classes","useSelector","listLoading","pokeListSelectors","detailLoading","pokeDetailSelectors","AppBar","className","Container","maxWidth","Toolbar","disableGutters","Box","display","flexGrow","alignItems","mr","Link","href","height","src","Logo","alt","Typography","variant","capitalizeFirstLetter","string","charAt","toUpperCase","slice","PokeCard","fetchPokemon","Grow","in","Card","CardActionArea","onClick","name","CardMedia","component","image","sprites","front_default","title","onError","e","target","Placeholder","CardContent","gutterBottom","CardActions","types","map","item","Chip","key","type","label","PokeList","props","Fragment","Grid","xs","TableData","rows","TableContainer","Paper","Table","aria-label","TableBody","row","TableRow","TableCell","scope","align","value","createData","PokeDetail","id_string","id","pokemon_id","substring","length","stats","Object","values","tableRows","stat","base_stat","push","weight","moves","instance","axios","baseURL","PokeAPI","getPokemonsList","offset","limit","a","get","response","status","data","console","Error","message","getPokemonByName","REQUEST","SUCCESS","FAILURE","success","payload","Pokedex","dispatch","useDispatch","listError","detailError","fetchPokemons","results","Promise","all","next","log","useEffect","mt","container","spacing","fetchPokemonByName","Alert","severity","justifyContent","Button","size","disabled","offsetTop","offsetBottom","mb","minWidth","App","Boolean","window","location","hostname","match","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","middlewares","applyMiddleware","thunk","store","createStore","theme","createMuiTheme","overrides","MuiCardMedia","img","objectFit","padding","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.90f90c51.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const style = makeStyles({\n    loader: {\n        width: '100%',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n    },\n    poison: {\n        backgroundColor: '#b97fc9',\n        color: 'white',\n    },\n    grass: {\n        backgroundColor: '#9bcc50',\n        color: 'white',\n    },\n    fire: {\n        backgroundColor: '#fd7d24',\n        color: 'white',\n    },\n    flying: {\n        backgroundColor: '#3dc7ef',\n        color: 'white',\n    },\n    water: {\n        backgroundColor: '#4592c4',\n        color: 'white',\n    },\n    bug: {\n        backgroundColor: '#729f3f',\n        color: 'white',\n    },\n    normal: {\n        backgroundColor: '#a4acaf',\n        color: 'white',\n    },\n    electric: {\n        backgroundColor: '#eed535',\n        color: 'white',\n    },\n    ground: {\n        backgroundColor: '#ab9842',\n        color: 'white',\n    },\n    fairy: {\n        backgroundColor: '#fdb9e9',\n        color: 'white',\n    },\n    fighting: {\n        backgroundColor: '#d56723',\n        color: 'white',\n    },\n    psychic: {\n        backgroundColor: '#f366b9',\n        color: 'white',\n    },\n    rock: {\n        backgroundColor: '#a38c21',\n        color: 'white',\n    },\n    steel: {\n        backgroundColor: '#9eb7b8',\n        color: 'white',\n    },\n    ice: {\n        backgroundColor: '#51c4e7',\n        color: 'white',\n    },\n    dragon: {\n        backgroundColor: '#f16e57',\n        color: 'white',\n    },\n    dark: {\n        backgroundColor: '#707070',\n        color: 'white',\n    },\n    ghost: {\n        backgroundColor: '#7b62a3',\n        color: 'white',\n    },\n});\n","const getList = (state) => state.pokeList && state.pokeList.pokemons;\nconst getLoading = (state) => state.pokeList && state.pokeList.loading;\nconst getError = (state) => state.pokeList && state.pokeList.error;\nconst getNextUrl = (state) => state.pokeList && state.pokeList.nextUrl;\n\nexport default { getList, getLoading, getError, getNextUrl };\n","const getPokemon = (state) => state.pokeDetail && state.pokeDetail.pokemon;\r\nconst getLoading = (state) => state.pokeDetail && state.pokeDetail.loading;\r\nconst getError = (state) => state.pokeDetail && state.pokeDetail.error;\r\n\r\nexport default { getPokemon, getLoading, getError };\r\n","import React from 'react';\nimport { AppBar, Toolbar, Box, Container, Link, Typography } from '@material-ui/core';\nimport Logo from '../../assets/logo/logo.svg';\nimport LinearProgress from '@material-ui/core/LinearProgress/LinearProgress';\nimport { style } from '../../theme/style';\nimport { useSelector } from 'react-redux';\nimport pokeListSelectors from '../../redux/PokeList/selectors';\nimport pokeDetailSelectors from '../../redux/PokeDetail/selectors';\n\nconst Header = () => {\n    const classes = style();\n    const { listLoading, detailLoading } = useSelector((state) => ({\n        listLoading: pokeListSelectors.getLoading(state),\n        detailLoading: pokeDetailSelectors.getLoading(state),\n    }));\n    return (\n        <AppBar position=\"sticky\">\n            {(listLoading || detailLoading) && (\n                <LinearProgress className={classes.loader} color=\"secondary\" />\n            )}\n            <Container maxWidth=\"lg\">\n                <Toolbar disableGutters>\n                    <Box display=\"flex\" flexGrow=\"1\" alignItems=\"center\">\n                        <Box mr={2}>\n                            <Link href=\"/pokedex/\">\n                                <img width=\"48\" height=\"48\" src={Logo} alt=\"Pokedex\" />\n                            </Link>\n                        </Box>\n                        <Typography variant=\"h6\">Pokedex</Typography>\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","export const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n};","import React from 'react';\nimport {\n    Card,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    CardActions,\n    Typography,\n    Chip,\n    Grow,\n} from '@material-ui/core';\nimport Placeholder from '../../../assets/logo/logo.svg';\nimport { style } from '../../../theme/style';\nimport { capitalizeFirstLetter } from '../../../utils/utils';\n\nconst PokeCard = ({ pokemon, fetchPokemon }) => {\n    const classes = style();\n    return (\n        <Grow in>\n            <Card className=\"poke-card\">\n                <CardActionArea\n                    onClick={() => {\n                        fetchPokemon(pokemon.name);\n                    }}\n                >\n                    <CardMedia\n                        component=\"img\"\n                        alt={pokemon.name}\n                        height=\"96\"\n                        image={pokemon.sprites.front_default}\n                        title={pokemon.name}\n                        onError={(e) => {\n                            e.target.src = Placeholder;\n                        }}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            {capitalizeFirstLetter(pokemon.name)}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    {pokemon.types.map((item) => (\n                        <Chip\n                            key={`item-type-${item.type.name}`}\n                            className={item.type.name}\n                            label={capitalizeFirstLetter(item.type.name)}\n                        />\n                    ))}\n                </CardActions>\n            </Card>\n        </Grow>\n    );\n};\nexport default PokeCard;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport PokeCard from '../PokeCard/PokeCard';\n\nconst PokeList = ({ pokemons, ...props }) => {\n    return (\n        <React.Fragment>\n            {pokemons.map((pokemon) => (\n                <Grid key={`poke-card-${pokemon.name}`} item xs={4}>\n                    <PokeCard {...props} pokemon={pokemon} />\n                </Grid>\n            ))}\n        </React.Fragment>\n    );\n};\nexport default PokeList;\n","import React from 'react';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\nimport { capitalizeFirstLetter } from '../../utils/utils';\n\nconst TableData = ({ rows }) => {\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {capitalizeFirstLetter(row.name)}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.value}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\nexport default TableData;\n","import React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography, Chip } from '@material-ui/core';\nimport Placeholder from '../../../assets/logo/logo.svg';\nimport { capitalizeFirstLetter } from '../../../utils/utils';\nimport { style } from '../../../theme/style';\nimport TableData from '../../TableData/TableData';\n\nfunction createData(name, value) {\n    return { name, value };\n}\n\nconst PokeDetail = ({ pokemon }) => {\n    const id_string = '' + pokemon.id;\n    const filler = '000';\n    const pokemon_id = filler.substring(0, filler.length - id_string.length) + id_string;\n    const stats = Object.values(pokemon.stats);\n    const classes = style();\n    const tableRows = stats.map((stat) => {\n        return createData(stat.stat.name, stat.base_stat);\n    });\n    tableRows.push(createData('Weight', pokemon.weight));\n    tableRows.push(createData('Total moves', pokemon.moves.length));\n    return (\n        <Card>\n            <CardMedia\n                component=\"img\"\n                alt={pokemon.name}\n                height=\"96\"\n                image={pokemon.sprites.front_default}\n                title={pokemon.name}\n                onError={(e) => {\n                    e.target.src = Placeholder;\n                }}\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                    {capitalizeFirstLetter(pokemon.name)} #{pokemon_id}\n                </Typography>\n                <TableData rows={tableRows} />\n            </CardContent>\n            <CardActions>\n                {pokemon.types.map((item) => (\n                    <Chip\n                        key={`item-type-${item.type.name}`}\n                        className={classes[item.type.name]}\n                        label={capitalizeFirstLetter(item.type.name)}\n                    />\n                ))}\n            </CardActions>\n        </Card>\n    );\n};\nexport default PokeDetail;\n","import * as axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/',\n});\n\nexport class PokeAPI {\n    static getPokemonsList = async (offset, limit) => {\n        try {\n            const response = await instance.get(`pokemon/?offset=${offset}&limit=${limit}`);\n            if (response.status === 200) {\n                return response.data;\n            }\n        } catch (e) {\n            console.error('PokeAPI.getPokemonsList() error: ', e);\n            throw new Error(e.message);\n        }\n    };\n\n    static getPokemonByName = async (name) => {\n        try {\n            const response = await instance.get(`pokemon/${name}/`);\n            if (response.status === 200) {\n                return response.data;\n            }\n        } catch (e) {\n            console.error('PokeAPI.getPokemonByName() error: ', e);\n            throw new Error(e.message);\n        }\n    };\n}\n","export const REQUEST = 'POKE_LIST/REQUEST';\nexport const SUCCESS = 'POKE_LIST/SUCCESS';\nexport const FAILURE = 'POKE_LIST/FAILURE';\nexport const SET_NEXT_URL = 'POKE_LIST/SET_NEXT_URL';\n","import { REQUEST, SUCCESS, FAILURE, SET_NEXT_URL } from './actionTypes';\n\nexport function request() {\n    return {\n        type: REQUEST,\n    };\n}\n\nexport function success(data) {\n    return {\n        type: SUCCESS,\n        payload: data,\n    };\n}\n\nexport function failure(error) {\n    return {\n        type: FAILURE,\n        payload: error,\n    };\n}\n\nexport function setNextUrl(url) {\n    return {\n        type: SET_NEXT_URL,\n        payload: url,\n    };\n}\n","import { PokeAPI } from '../../api/PokeAPI';\nimport { request, success, failure, setNextUrl } from './actions';\n\nexport const fetchPokemonsList = (offset, limit) => async (dispatch) => {\n    dispatch(request());\n    try {\n        const data = await PokeAPI.getPokemonsList(offset, limit);\n        if (data.results.length > 0) {\n            const pokemons = await Promise.all(\n                data.results.map((pokemon) => PokeAPI.getPokemonByName(pokemon.name))\n            );\n            dispatch(setNextUrl(data.next));\n            dispatch(success(pokemons));\n        }\n    } catch (e) {\n        console.log('Error: ', e);\n        dispatch(failure(e.message));\n    }\n};\n","import { REQUEST, SUCCESS, FAILURE } from './actionTypes';\n\nexport function request() {\n    return {\n        type: REQUEST,\n    };\n}\n\nexport function success(data) {\n    return {\n        type: SUCCESS,\n        payload: data,\n    };\n}\n\nexport function failure(error) {\n    return {\n        type: FAILURE,\n        payload: error,\n    };\n}\n","export const REQUEST = 'POKE_DETAIL/REQUEST';\nexport const SUCCESS = 'POKE_DETAIL/SUCCESS';\nexport const FAILURE = 'POKE_DETAIL/FAILURE';\n","import { PokeAPI } from '../../api/PokeAPI';\nimport { request, success, failure } from './actions';\n\nexport const fetchPokemonByName = (name) => async (dispatch) => {\n    dispatch(request());\n    try {\n        const data = await PokeAPI.getPokemonByName(name);\n        if (data) {\n            dispatch(success(data));\n        }\n    } catch (e) {\n        console.log('Error: ', e);\n        dispatch(failure(e.message));\n    }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Box, Container, Button, Grow } from '@material-ui/core';\nimport PokeList from './PokeList/PokeList';\nimport PokeDetail from './PokeDetail/PokeDetail';\nimport pokeListSelectors from '../../redux/PokeList/selectors';\nimport pokeDetailSelectors from '../../redux/PokeDetail/selectors';\nimport { fetchPokemonsList } from '../../redux/PokeList/operations';\nimport StickyBox from 'react-sticky-box/dist/esnext';\nimport { fetchPokemonByName } from '../../redux/PokeDetail/operations';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Pokedex = () => {\n    const dispatch = useDispatch();\n    const { pokemons, nextUrl, listLoading, listError, pokemon, detailError } = useSelector(\n        (state) => ({\n            pokemons: pokeListSelectors.getList(state),\n            nextUrl: pokeListSelectors.getNextUrl(state),\n            listLoading: pokeListSelectors.getLoading(state),\n            listError: pokeListSelectors.getError(state),\n            pokemon: pokeDetailSelectors.getPokemon(state),\n            detailError: pokeDetailSelectors.getError(state),\n        })\n    );\n\n    const fetchPokemons = () => {\n        dispatch(fetchPokemonsList(pokemons.length, 12));\n    };\n\n    const fetchPokemon = (name) => {\n        dispatch(fetchPokemonByName(name));\n    };\n\n    useEffect(() => {\n        fetchPokemons();\n    }, []);\n\n    return (\n        <Box mt={5}>\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={4}>\n                    <Grid item container xs={7} spacing={3}>\n                        {pokemons && <PokeList pokemons={pokemons} fetchPokemon={fetchPokemon} />}\n                        {listError && (\n                            <Grid item xs={12}>\n                                <Alert severity=\"error\">{listError}</Alert>\n                            </Grid>\n                        )}\n                        {nextUrl && (\n                            <Grid item xs={12}>\n                                <Box mt={5} display=\"flex\" justifyContent=\"center\">\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        size=\"large\"\n                                        onClick={fetchPokemons}\n                                        disabled={listLoading}\n                                    >\n                                        Load More\n                                    </Button>\n                                </Box>\n                            </Grid>\n                        )}\n                    </Grid>\n                    <Grid item xs={4}>\n                        <StickyBox offsetTop={100} offsetBottom={20}>\n                            {pokemon && (\n                                <Grow in>\n                                    <Box mb={2} minWidth={0.75}>\n                                        <PokeDetail pokemon={pokemon} />\n                                    </Box>\n                                </Grow>\n                            )}\n                            {detailError && (\n                                    <Alert severity=\"error\">{detailError}</Alert>\n                            )}\n                        </StickyBox>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    );\n};\n\nexport default Pokedex;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport Pokedex from './components/Pokedex/Pokedex';\n\nconst App = () => (\n    <React.Fragment>\n        <Header />\n        <Pokedex />\n    </React.Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { REQUEST, SUCCESS, FAILURE, SET_NEXT_URL } from './actionTypes';\n\nconst INITIAL_STATE = {\n    pokemons: [],\n    loading: false,\n    error: null,\n    nextUrl: null,\n};\n\nexport default (state = INITIAL_STATE, { type, payload }) => {\n    switch (type) {\n        case REQUEST:\n            return {\n                ...state,\n                error: null,\n                loading: true,\n            };\n        case SUCCESS:\n            return {\n                ...state,\n                pokemons: [...state.pokemons, ...payload],\n                error: null,\n                loading: false,\n            };\n        case FAILURE:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n        case SET_NEXT_URL:\n            return {\n                ...state,\n                nextUrl: payload,\n            };\n        default:\n            return state;\n    }\n};\n","import { REQUEST, SUCCESS, FAILURE } from './actionTypes';\n\nconst INITIAL_STATE = {\n    pokemon: null,\n    loading: false,\n    error: null,\n};\n\nexport default (state = INITIAL_STATE, { type, payload }) => {\n    switch (type) {\n        case REQUEST:\n            return {\n                ...state,\n                pokemon: null,\n                error: null,\n                loading: true,\n            };\n        case SUCCESS:\n            return {\n                ...state,\n                pokemon: payload,\n                error: null,\n                loading: false,\n            };\n        case FAILURE:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n};\n","import {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport pokeListReducer from '../redux/PokeList/reducer';\nimport pokeDetailReducer from '../redux/PokeDetail/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    pokeList: pokeListReducer,\n    pokeDetail: pokeDetailReducer,\n});\n\nconst middlewares = applyMiddleware(thunk);\n\nconst store = createStore(reducers, composeEnhancers(middlewares));\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core';\n\nexport const theme = createMuiTheme({\n    overrides: {\n        MuiCardMedia: {\n            img: {\n                objectFit: 'contain',\n                padding: '8px',\n            },\n        },\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport {theme} from \"./theme/theme\";\n\nimport './assets/css/main.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <CssBaseline />\n            <ThemeProvider theme={theme}>\n                <App />\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3726ed66.svg\";"],"sourceRoot":""}